# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

## HashMap Technique
## Time Complexity - n 
##Space Complexity - n

class Solution(object):
    def hasCycle(self, head):
        a=set()
        while head:
            if head in a:
                return True
            a.add(head)
            head=head.next
        return False
        
 ## Two Pointer
 ## Time Complexity - n 
 ##Space Complexity - 1

 class Solution(object):
    def hasCycle(self, head):
        slow=fast=head
        while fast and fast.next:
            fast=fast.next.next
            slow=slow.next
            if fast == slow:
                return True
        return False
            
